<?xml version="1.0" encoding="GB2312"?>
<!DOCTYPE sqlMap
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="log">
	<typeAlias alias="logMonitor" type="com.kintiger.xplatform.api.log.bo.LogMonitor" />
	<typeAlias alias="log" type="com.kintiger.xplatform.api.log.bo.Log" />
	
	<select id="getLogMonitorCount" parameterClass="logMonitor" resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from BASIS.basis_tb_log_monitor t
	]]>
	</select>
	
	<select id="getLogMonitorList" parameterClass="logMonitor" resultClass="logMonitor">
		<include refid="global.paginationStart" />
	<![CDATA[
		select t.log_monitor_id as logMonitorId,
			   t.class_name     as className,
			   t.method_name    as methodName,
			   t.line_number    as lineNumber,
			   t.message        as message,
			   t.e,
			   t.log_date       as logDate,
			   t.create_date    as createDate
		  from BASIS.basis_tb_log_monitor t
	]]>
		<include refid="global.orderBy" />
		<include refid="global.paginationEnd" />
	</select>
	
	<insert id="createLogMonitor" parameterClass="logMonitor">
		<selectKey resultClass="java.lang.Long" keyProperty="logMonitorId">
		<![CDATA[
			SELECT to_number(BASIS.BASIS_SEQ_LOG_MONITOR.nextval) AS logMonitorId
			FROM dual
		]]>
		</selectKey>
	<![CDATA[
		insert into BASIS.basis_tb_log_monitor
		  (LOG_MONITOR_ID,
		   CLASS_NAME,
		   METHOD_NAME,
		   LINE_NUMBER,
		   MESSAGE,
		   E,
		   LOG_DATE,
		   CREATE_DATE)
		values
		  (#logMonitorId:NUMBER#,
		   #className:VARCHAR#,
		   #methodName:VARCHAR#,
		   #lineNumber:VARCHAR#,
		   #message:VARCHAR#,
		   #e:VARCHAR#,
		   #logDate:VARCHAR#,
		   sysdate)
	]]>
	</insert>
	
	<select id="getLogMonitorList4SendEmail" resultClass="logMonitor">
	<![CDATA[
		select *
		  from (select row_.*, rownum rownum_
				  from (select t.log_monitor_id as logMonitorId,
							   t.class_name     as className,
							   t.method_name    as methodName,
							   t.line_number    as lineNumber,
							   t.message        as message,
							   t.e,
							   t.log_date       as logDate,
							   t.create_date    as createDate
						  from BASIS.basis_tb_log_monitor t
						 where t.create_date > sysdate - 0.25
						 order by t.log_monitor_id desc) row_
				 where rownum < 50)
		 where rownum_ >= 1
	]]>
	</select>
	
	<insert id="createActionLog" parameterClass="log">
		<selectKey resultClass="java.lang.Long" keyProperty="id">
		<![CDATA[
			SELECT to_number(BASIS.BASIS_SEQ_ACTION_LOG.nextval) AS id FROM dual
		]]>
		</selectKey>
	<![CDATA[
		INSERT
		INTO BASIS.basis_tb_action_log
		  (
			ID,
			USER_ID,
			ACTION_NAME,
			CREATE_DATE,
			IP
		  )
		  VALUES
		  (
			#id:NUMBER#,
			#userId:VARCHAR#,
			#actionName:VARCHAR#,
			TO_DATE(#createDate#,'yyyy-mm-dd hh24:mi:ss'),
			#ip:VARCHAR#
		  )
	]]>
	</insert>
	
	<select id="getActionLogCount" parameterClass="log" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT COUNT(1)
		FROM BASIS.basis_tb_action_log t,
		  BASIS.basis_tb_user p
		WHERE t.user_id = p.user_id
	]]>
		<dynamic>
			<isNotEmpty property="passport" prepend="and">
			<![CDATA[ p.passport like upper(#passport,handler=wildcard#) escape '\' ]]>
			</isNotEmpty>
			<isNotEmpty property="userId" prepend="and">
			<![CDATA[ t.user_id = #userId# ]]>
			</isNotEmpty>
			<isNotEmpty property="gmtStart" prepend="and">
			<![CDATA[ t.create_date >= to_date(#gmtStart#, 'yyyy-mm-dd') ]]>
			</isNotEmpty>
			<isNotEmpty property="gmtEnd" prepend="and">
			<![CDATA[ t.create_date < to_date(#gmtEnd#, 'yyyy-mm-dd') + 1 ]]>
			</isNotEmpty>
		</dynamic>
	</select>
	
	<select id="getActionLogList" parameterClass="log" resultClass="log">
		<include refid="global.paginationStart" />
	<![CDATA[
		SELECT t.id,
		  p.passport,
		  p.user_name   AS userName,
		  t.action_name AS actionName,
		  t.ip,
		  TO_CHAR(t.create_date,'yyyy-mm-dd hh24:mi:ss') AS createDate
		FROM BASIS.basis_tb_action_log t,
		  BASIS.basis_tb_user p
		WHERE t.user_id = p.user_id
	]]>
		<dynamic>
			<isNotEmpty property="passport" prepend="and">
			<![CDATA[ p.passport like upper(#passport,handler=wildcard#) escape '\' ]]>
			</isNotEmpty>
			<isNotEmpty property="userId" prepend="and">
			<![CDATA[ t.user_id = #userId# ]]>
			</isNotEmpty>
			<isNotEmpty property="gmtStart" prepend="and">
			<![CDATA[ t.create_date >= to_date(#gmtStart#, 'yyyy-mm-dd') ]]>
			</isNotEmpty>
			<isNotEmpty property="gmtEnd" prepend="and">
			<![CDATA[ t.create_date < to_date(#gmtEnd#, 'yyyy-mm-dd') + 1 ]]>
			</isNotEmpty>
		</dynamic>
		<include refid="global.orderBy" />
		<include refid="global.paginationEnd" />
	</select>
	
</sqlMap>