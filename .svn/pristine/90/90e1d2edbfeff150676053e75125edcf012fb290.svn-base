<?xml version="1.0" encoding="GB2312"?>
<!DOCTYPE sqlMap
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="menu">
	<typeAlias alias="menu" type="com.kintiger.xplatform.api.menu.bo.Menu" />
	
	<select id="getMenuTreeList" parameterClass="menu" resultClass="menu">
	<![CDATA[
		SELECT aaa.id,
		  aaa.name,
		  aaa.url,
		  aaa.redirect_url AS redirectUrl,
		  aaa.target ,
		  aaa.order_by AS orderBy
		FROM basis.basis_tb_menu aaa
		WHERE EXISTS
		  (SELECT 1
		  FROM BASIS.basis_tb_role_menu t3
		  WHERE (EXISTS
			(SELECT 1
			FROM BASIS.basis_tb_station_role t2,
			  BASIS.basis_tb_station_user t1
			WHERE t1.station_id = t2.station_id
			AND t2.flag         = 'U'
			AND t3.role_id      = t2.role_id
			AND t1.user_id      = #userId#
			)
		  OR EXISTS
			(SELECT 1
			FROM basis.basis_tb_user_role t6
			WHERE t3.role_id = t6.role_id
			AND t6.user_id   = #userId#
			))
		  AND aaa.id     = t3.menu_id
		  )
		AND aaa.pid = #pid#
		ORDER BY aaa.order_by
	]]>
	</select>
	
	<select id="getMenuCount" parameterClass="menu" resultClass="java.lang.Integer">
	<![CDATA[
		select count(t.id)
		  from BASIS.basis_tb_menu t, BASIS.basis_tb_menu p
		 where t.pid = p.id
	]]>
		<dynamic>
			<isNotEmpty property="id" prepend="and">
			<![CDATA[ t.id = #id# ]]>
			</isNotEmpty>
			<isNotEmpty property="pid" prepend="and">
			<![CDATA[ t.pid = #pid# ]]>
			</isNotEmpty>
			<isNotEmpty property="name" prepend="and">
			<![CDATA[ t.name like #name,handler=wildcard# escape '\' ]]>
			</isNotEmpty>
			<isNotEmpty property="pname" prepend="and">
			<![CDATA[ p.name like #pname,handler=wildcard# escape '\' ]]>
			</isNotEmpty>
			<isNotEmpty property="target" prepend="and">
			<![CDATA[ t.target  = #target# ]]>
			</isNotEmpty>
			<isNotEmpty property="search" prepend="and">
			<![CDATA[
				  ( t.id like #search,handler=wildcard# escape '\'
				 or t.name like #search,handler=wildcard# escape '\' )
			]]>
			</isNotEmpty>
		</dynamic>
	</select>
	
	<select id="getMenuList" parameterClass="menu" resultClass="menu">
		<include refid="global.paginationStart" />
	<![CDATA[
		SELECT t.id,
		  t.pid,
		  t.name,
		  t.url,
		  t.target,
		  t.redirect_url AS redirectUrl,
		  p.name         AS pname,
		  CASE
			WHEN q.roleCount IS NULL
			THEN 0
			ELSE q.roleCount
		  END AS roleCount,
		  CASE
			WHEN k.menuCount IS NULL
			THEN 0
			ELSE k.menuCount
		  END AS menuCount
		FROM BASIS.basis_tb_menu t,
		  BASIS.basis_tb_menu p,
		  (SELECT COUNT(1) AS roleCount,
			qq.menu_id
		  FROM BASIS.basis_tb_role_menu qq
		  GROUP BY qq.menu_id
		  )q,
		  (SELECT COUNT(1) AS menuCount,
			kk.pid
		  FROM BASIS.basis_tb_menu kk
		  GROUP BY kk.pid
		  )k
		WHERE t.pid = p.id
		AND t.id    = q.menu_id(+)
		AND t.id    = k.pid(+)
	]]>
		<dynamic>
			<isNotEmpty property="id" prepend="and">
			<![CDATA[ t.id = #id# ]]>
			</isNotEmpty>
			<isNotEmpty property="pid" prepend="and">
			<![CDATA[ t.pid = #pid# ]]>
			</isNotEmpty>
			<isNotEmpty property="name" prepend="and">
			<![CDATA[ t.name like #name,handler=wildcard# escape '\' ]]>
			</isNotEmpty>
			<isNotEmpty property="pname" prepend="and">
			<![CDATA[ p.name like #pname,handler=wildcard# escape '\' ]]>
			</isNotEmpty>
			<isNotEmpty property="target" prepend="and">
			<![CDATA[ t.target  = #target# ]]>
			</isNotEmpty>
			<isNotEmpty property="search" prepend="and">
			<![CDATA[
				  ( t.id like #search,handler=wildcard# escape '\'
				 or t.name like #search,handler=wildcard# escape '\' )
			]]>
			</isNotEmpty>
			<isEmpty property="sort">
			<![CDATA[ order by t.pid desc, t.id desc ]]>
			</isEmpty>
		</dynamic>
		<include refid="global.orderBy" />
		<include refid="global.paginationEnd" />
	</select>
	
	<insert id="createMenu" parameterClass="menu">
		<selectKey resultClass="java.lang.Long" keyProperty="id">
		<![CDATA[
			select osap.seq_menu_items_id.NEXTVAL as id from dual
		]]>
		</selectKey>
	<![CDATA[
		insert into BASIS.basis_tb_menu
		  (ID,
		   PID,
		   NAME,
		   URL,
		   TARGET,
		   ORDER_BY,
		   CREATE_DATE,
		   MODIFY_DATE,
		   TYPE,
		   REDIRECT_URL)
		values
		  (#id:NUMBER#,
		   #pid:NUMBER#,
		   #name:VARCHAR#,
	]]>
		<dynamic>
			<isNotEmpty property="redirectUrl" >
			<![CDATA[
				   #url:VARCHAR# || #id:NUMBER#,
			]]>
			</isNotEmpty>
			<isEmpty property="redirectUrl" >
			<![CDATA[
				   #url:VARCHAR#,
			]]>
			</isEmpty>
		</dynamic>
	<![CDATA[
		   #target:VARCHAR#,
		   #orderBy:NUMBER#,
		   sysdate,
		   sysdate,
		   #type:VARCHAR#,
		   #redirectUrl:VARCHAR#)
	]]>
	</insert>
	
	<insert id="batchCreateMenu" parameterClass="menu">
	<![CDATA[
		INSERT
		INTO BASIS.basis_tb_menu
		  (
			ID,
			PID,
			NAME,
			URL,
			TARGET,
			ORDER_BY,
			CREATE_DATE,
			MODIFY_DATE,
			REDIRECT_URL,
			TYPE
		  )
		  VALUES
		  (
			#id:NUMBER#,
			#pid:NUMBER#,
			#name:VARCHAR#,
	]]>
		<dynamic>
			<isNotEmpty property="redirectUrl" >
			<![CDATA[
				   #url:VARCHAR# || #id:NUMBER#,
			]]>
			</isNotEmpty>
			<isEmpty property="redirectUrl" >
			<![CDATA[
				   #url:VARCHAR#,
			]]>
			</isEmpty>
		</dynamic>
	<![CDATA[
			#target:VARCHAR#,
			#orderBy:NUMBER#,
			sysdate,
			sysdate,
			#redirectUrl:VARCHAR#,
			#type:VARCHAR#
		  )
	]]>
	</insert>
	
	<select id="getMenuById" parameterClass="java.lang.Long" resultClass="menu">
	<![CDATA[
		SELECT t.id,
		  t.pid,
		  t.name,
		  t.url,
		  t.target,
		  t.order_by     AS orderBy,
		  t.redirect_url AS redirectUrl,
		  t.type
		FROM BASIS.basis_tb_menu t
		WHERE t.id = #id#
	]]>
	</select>
	
	<update id="updateMenu" parameterClass="menu">
	<![CDATA[
		update BASIS.basis_tb_menu t
		   set t.modify_date   = sysdate,
			   t.pid           = #pid#,
			   t.name          = #name#,
			   t.url           = #url#,
			   t.target        = #target#,
			   t.order_by      = #orderBy#,
			   t.redirect_url  = #redirectUrl#
		 where t.id = #id#
	]]>
	</update>
	
	<delete id="recursiveDeleteMenu" parameterClass="java.lang.Long">
	<![CDATA[
		DELETE BASIS.basis_tb_menu t
		WHERE EXISTS
		  (SELECT 1
		  FROM BASIS.basis_tb_menu p
		  WHERE t.id              = p.id
			START WITH p.id       = #id#
			CONNECT BY prior p.id = p.pid
		  )
	]]>
	</delete>
	
	<delete id="deleteInvalidSAPMenu">
	<![CDATA[
		DELETE BASIS.basis_tb_menu t
		WHERE NOT EXISTS
		  (SELECT 1 FROM BASIS.basis_tb_role_menu p WHERE t.id = p.menu_id
		  )
		AND t.type = 'S'
	]]>
	</delete>
	
	<select id="getSelectedMenu4RoleCount" parameterClass="menu" resultClass="java.lang.Integer">
	<![CDATA[
		select count(t.id)
		  from BASIS.basis_tb_role_menu t, BASIS.basis_tb_menu p
		 where t.menu_id = p.id
		   and t.role_id = #roleId#
	]]>
		<dynamic>
			<isNotEmpty property="id" prepend="and">
			<![CDATA[ p.id = #id# ]]>
			</isNotEmpty>
			<isNotEmpty property="name" prepend="and">
			<![CDATA[ p.name like #name,handler=wildcard# escape '\' ]]>
			</isNotEmpty>
		</dynamic>
	</select>
	
	<select id="getSelectedMenu4RoleList" parameterClass="menu" resultClass="menu">
		<include refid="global.paginationStart" />
	<![CDATA[
		select t.id           as roleMenuId,
			   p.id,
			   p.pid,
			   p.name,
			   p.url,
			   p.target,
			   p.redirect_url as redirectUrl
		  from BASIS.basis_tb_role_menu t, BASIS.basis_tb_menu p
		 where t.menu_id = p.id
		   and t.role_id = #roleId#
	]]>
		<dynamic>
			<isNotEmpty property="id" prepend="and">
			<![CDATA[ p.id = #id# ]]>
			</isNotEmpty>
			<isNotEmpty property="name" prepend="and">
			<![CDATA[ p.name like #name,handler=wildcard# escape '\' ]]>
			</isNotEmpty>
		</dynamic>
		<include refid="global.orderBy" />
		<include refid="global.paginationEnd" />
	</select>
	
	<delete id="deleteSelectedMenu4Role" parameterClass="menu">
	<![CDATA[
		DELETE BASIS.basis_tb_role_menu t WHERE t.role_id = #roleId# AND t.menu_id IN
	]]>
		<iterate property="codes" open="(" close=")" conjunction=",">#codes[]#
		</iterate>
	</delete>
	
	<delete id="deleteInvalidSelectedMenu4Role">
	<![CDATA[
		DELETE BASIS.basis_tb_role_menu t
		WHERE EXISTS
		  (SELECT 1
		  FROM BASIS.basis_tb_role p
		  WHERE t.role_id = p.role_id
		  AND p.state     = 'D'
		  AND p.type      = 'S'
		  )
	]]>
	</delete>
	
	<delete id="batchDeleteSelectedMenu4Role" parameterClass="menu">
	<![CDATA[
		DELETE basis.basis_tb_role_menu t WHERE t.role_id IN
	]]>
		<iterate property="codes" open="(" close=")" conjunction=",">#codes[]#
		</iterate>
	</delete>
	
	<delete id="recursiveDeleteSelectedMenu4Role" parameterClass="java.lang.Long">
	<![CDATA[
		DELETE BASIS.basis_tb_role_menu t
		WHERE EXISTS
		  (SELECT 1
		  FROM BASIS.basis_tb_menu p
		  WHERE t.menu_id         = p.id
			START WITH p.id       = #id#
			CONNECT BY prior p.id = p.pid
		  )
	]]>
	</delete>
	
	<select id="checkSelectedMenu4Role" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT COUNT(1)
		FROM BASIS.basis_tb_role_menu t
		WHERE t.role_id = #roleId#
		AND t.menu_id   = #menuId#
	]]>
	</select>
	
	<insert id="selectMenu4Role" parameterClass="java.util.Map">
		<selectKey resultClass="java.lang.Long" keyProperty="id">
		<![CDATA[
			SELECT BASIS.basis_seq_role_menu.nextval AS id FROM dual
		]]>
		</selectKey>
	<![CDATA[
		INSERT
		INTO BASIS.basis_tb_role_menu
		  (
			ID,
			ROLE_ID,
			MENU_ID,
			CREATE_DATE,
			MODIFY_DATE
		  )
		  VALUES
		  (
			#id#,
			#roleId#,
			#menuId#,
			sysdate,
			sysdate
		  )
	]]>
	</insert>
	
	<select id="getParentMenuId4Role" parameterClass="java.util.Map" resultClass="java.lang.Long">
	<![CDATA[
		select t.pid
		  from BASIS.basis_tb_menu t
		 where not exists (select 1
				  from BASIS.basis_tb_role_menu p
				 where t.pid = p.menu_id
				   and p.role_id = #roleId#)
		   and t.pid <> -1
		   and t.id = #menuId#
	]]>
	</select>
	
	<select id="getChildMenuId4Role" parameterClass="java.util.Map" resultClass="java.lang.Long">
	<![CDATA[
		select t.menu_id
		  from BASIS.basis_tb_role_menu t, BASIS.basis_tb_menu p
		 where t.menu_id = p.id
		   and t.role_id = #roleId#
		   and p.pid = #menuId#
	]]>
	</select>
	
	<select id="getMenuRequest" parameterClass="java.util.Map" resultClass="menu">
	<![CDATA[
		SELECT row_.*
		FROM
		  (SELECT aaa.id,
			CASE
			  WHEN bbb.menu_id IS NOT NULL
			  THEN 1
			  ELSE 0
			END sort
		  FROM BASIS.basis_tb_menu aaa,
			( SELECT DISTINCT t3.menu_id
			FROM BASIS.basis_tb_role_menu t3
			WHERE EXISTS
			  (SELECT 1
			  FROM BASIS.basis_tb_station_role t2,
				BASIS.basis_tb_station_user t1
			  WHERE t1.station_id = t2.station_id
			  AND t2.flag         = 'U'
			  AND t3.role_id      = t2.role_id
			  AND t1.user_id      = #userId#
			  )
			OR EXISTS
			  (SELECT 1
			  FROM basis.basis_tb_user_role t6
			  WHERE t3.role_id = t6.role_id
			  AND t6.user_id   = #userId#
			  )
			) bbb
		  WHERE aaa.id = bbb.menu_id(+)
		  AND aaa.url LIKE #actionName,handler=prefix# ESCAPE '\'
		  ORDER BY sort DESC
		  ) row_
		WHERE rownum < 2
	]]>
	</select>
	
</sqlMap>